@using Microsoft.AspNetCore.Identity
@using RunAndHikeStore.Common
@using RunAndHikeStore.Data.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<ul class="navbar-nav">
    @if (this.SignInManager.IsSignedIn(this.User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle text-white" data-bs-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                <i class="fa-solid fa-user mr-2"></i> @(this.User.Identity.Name)
            </a>
            <div class="dropdown-menu" data-bs-popper="static">
                <a class="dropdown-item" asp-area="Customer" asp-controller="Customer" asp-action="Orders" method="get">Orders</a>
                <a class="dropdown-item" asp-area="Customer" asp-controller="Customer" asp-action="Details" method="get">My Details</a>
            </div>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@(this.Url.Action("Index", "Home", new { area = string.Empty }))">
                <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>