@using RunAndHikeStore.Web.ViewModels.Order
@model AllOrdersViewModel

<h2 class="text-center mt-3">@ViewBag.Title</h2>
<hr />

<form asp-area="Admin" method="get">
    <div class="row justify-content-between">
        <div class="col-md-6">
            <label asp-for="Sorting"></label>
            <select asp-for="Sorting" class="form-control">
                <option value="1">Newest</option>
                <option value="2">Oldest</option>
            </select>
        </div>
        <div class="col-md-6 mb-2">
            <label asp-for="SearchTerm"></label>
            <div class="input-group">
                <input asp-for="SearchTerm" class="form-control" placeholder="Search here..">
                <button type="submit" class="btn btn-primary input-group-append">Search</button>
            </div>
        </div>
    </div>
</form>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalRecordsCount / AllOrdersViewModel.OrdersPerPage);
}
<div class="row mb-3">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-area="Admin"
           asp-controller="Order"
           asp-action="ManageOrders"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Orders.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-area="Admin"
           asp-controller="Order"
           asp-action="ManageOrders"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
    </div>
</div>
<table class="table table-hover">
    <thead>
        <tr class="table-dark text-center">
            <th scope="col">Order Number</th>
            <th scope="col">Order Date</th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Email</th>
            <th scope="col">Total Price</th>
            <th scope="col">Order Status</th>
            <th scope="col">Payment Status</th>
            <th scope="col">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model.Orders)
        {
            <tr class="table-dark text-center">
                <input type = "hidden" asp-for="@order.OrderId"/>
                <td>@order.OrderId</td>
                <td>@order.OrderDate</td>
                <td>@order.BillingDetails.FirstName</td>
                <td>@order.BillingDetails.LastName</td>
                <td>@order.Email</td>
                <td>@order.TotalPrice EUR</td>
                <td>@order.OrderStatus</td>
                <td>@order.PaymentStatus</td>
                <td>
                    <div class="row">
                    <a asp-area="Admin" asp-controller="Order" asp-action="Edit" asp-route-id="@order.OrderId" class="btn btn-warning mr-2 mb-2">Edit</a>
                    <a asp-area="Admin" asp-controller="Order" asp-action="Delete" asp-route-id="@order.OrderId" method="get" class="btn btn-danger mr-2 mb-2">Delete</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}